Program([FuncDecl(Id(test)[],([][Assign(Id(x),BinaryOp(*,IntLiteral(3),IntLiteral(4))),Assign(Id(x),BinaryOp(*.,IntLiteral(3),IntLiteral(4))),Assign(Id(x),BinaryOp(\,IntLiteral(3),IntLiteral(4))),Assign(Id(x),BinaryOp(\.,Id(a),Id(b))),Assign(Id(x),BinaryOp(%,CallExpr(Id(foo),[]),IntLiteral(2))),Assign(Id(x),BinaryOp(+,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(+.,IntLiteral(5),IntLiteral(6))),Assign(Id(x),BinaryOp(-,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(-.,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(&&,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(||,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(==,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(!=,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(=/=,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(<,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(<.,IntLiteral(12),IntLiteral(23))),Assign(Id(x),BinaryOp(>,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(>.,IntLiteral(11),IntLiteral(2))),Assign(Id(x),BinaryOp(<=,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(<=.,IntLiteral(123),IntLiteral(2))),Assign(Id(x),BinaryOp(>=,IntLiteral(1),IntLiteral(2))),Assign(Id(x),BinaryOp(>=.,IntLiteral(14),IntLiteral(2))),Assign(Id(x),UnaryOp(!,IntLiteral(1))),Assign(Id(x),UnaryOp(-,IntLiteral(1))),Assign(Id(x),UnaryOp(-.,IntLiteral(1)))]))])